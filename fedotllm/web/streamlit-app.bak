from fedotllm.web.frontend import pages as pg
from fedotllm.web.frontend.pages.preview import main as preview
from fedotllm.web.frontend.pages.side_bar import main as side_bar
from fedotllm.web.frontend.localization import lclz
import streamlit as st
import os

st.set_page_config(
    page_title="FedotLLM",
    page_icon="fedotllm/web/frontend/static/images/logo.png",
    layout="wide",
    initial_sidebar_state="expanded",
)

current_dir = os.path.dirname(os.path.abspath(__file__))
css_file_path = os.path.join(current_dir, "style.css")

with open(css_file_path) as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)


def store_query(key):
    st.session_state[key] = st.session_state["_" + key]
    st.session_state.task_running = True
    st.rerun()


def query_input():
    st.chat_input(
        placeholder=lclz[st.session_state.lang]["TASK_DESCRIPTION_PLACEHOLDER"],
        key="_task_description",
        on_submit=store_query,
        args=["task_description"],
    )


def main():
    pg.init_session()
    side_bar()

    # Initialize sidebar state
    if "sidebar_visible" not in st.session_state:
        st.session_state.sidebar_visible = True

    # Create main layout with right sidebar
    st.markdown('<div class="main-container">', unsafe_allow_html=True)

    # Toggle button for sidebar using Streamlit button
    col_toggle, col_spacer = st.columns([1, 10])
    with col_toggle:
        toggle_text = "◀ Hide" if st.session_state.sidebar_visible else "▶ Show"
        if st.button(toggle_text, key="sidebar_toggle", help="Toggle sidebar"):
            st.session_state.sidebar_visible = not st.session_state.sidebar_visible
            st.rerun()

    # Determine layout based on sidebar visibility
    if st.session_state.sidebar_visible:
        col1, col2 = st.columns([3, 1], gap="large")
        sidebar_class = "right-sidebar visible"
    else:
        col1, col2 = st.columns([4, 1], gap="large")
        sidebar_class = "right-sidebar hidden"

    with col1:
        st.markdown('<div class="content-area">', unsafe_allow_html=True)
        pg.chat()
        query_input()
        st.markdown("</div>", unsafe_allow_html=True)

    # Always create the sidebar column but conditionally show content
    with col2:
        if st.session_state.sidebar_visible:
            st.markdown(
                f'<div class="{sidebar_class}" id="right-sidebar">',
                unsafe_allow_html=True,
            )
            st.markdown('<div class="sidebar-content">', unsafe_allow_html=True)
            preview()
            st.markdown("</div>", unsafe_allow_html=True)
            st.markdown("</div>", unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)


if __name__ == "__main__":
    main()
